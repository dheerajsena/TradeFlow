<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TradeFlow 2025</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    * {
      box-sizing: border-box;
      font-family: 'Inter', sans-serif;
    }
    body {
      margin: 0;
      background: #f4f7fb;
      color: #222;
    }
    header {
      padding: 1rem 2rem;
      background: #0047ab;
      color: #fff;
      font-size: 1.5rem;
      font-weight: 600;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    main {
      display: flex;
      flex-direction: column;
      padding: 2rem;
      max-width: 960px;
      margin: auto;
    }
    .card {
      background: #fff;
      padding: 1.5rem;
      border-radius: 1rem;
      box-shadow: 0 2px 10px rgba(0,0,0,0.05);
      margin-bottom: 2rem;
    }
    h2 {
      margin-top: 0;
    }
    input, button {
      padding: 0.6rem;
      margin: 0.5rem 0;
      font-size: 1rem;
      width: 100%;
    }
    button {
      background: #0047ab;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    button:hover {
      background: #003080;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 1rem;
    }
    th, td {
      padding: 0.75rem;
      border-bottom: 1px solid #ddd;
    }
    th {
      background-color: #0047ab;
      color: white;
    }
    .profit { color: green; }
    .loss { color: red; }
  </style>
</head>
<body>
  <header>TradeFlow 2025 â€“ Your Personal P&L Tracker</header>
  <main>
    <div class="card">
      <h2>ðŸ“¥ Add Trade Entry</h2>
      <form id="tradeForm">
        <input type="date" id="date" required>
        <input type="number" id="spent" placeholder="Amount Spent (AUD)" step="0.01" required>
        <input type="number" id="earned" placeholder="Amount Earned (AUD)" step="0.01" required>
        <button type="submit">Add Trade</button>
      </form>
    </div>

    <div class="card">
      <h2>ðŸ“Š Trade History</h2>
      <table id="tradeTable">
        <thead>
          <tr>
            <th>Date</th>
            <th>Spent</th>
            <th>Earned</th>
            <th>Profit/Loss</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
        </tbody>
      </table>
    </div>

    <div class="card">
      <h2>ðŸ“ˆ Progress Summary</h2>
      <div id="summary"></div>
    </div>
  </main>

  <script>
    const form = document.getElementById('tradeForm');
    const table = document.getElementById('tradeTable').getElementsByTagName('tbody')[0];
    const summary = document.getElementById('summary');

    let trades = JSON.parse(localStorage.getItem('trades')) || [];

    function updateSummary() {
      const totalSpent = trades.reduce((acc, t) => acc + parseFloat(t.spent), 0);
      const totalEarned = trades.reduce((acc, t) => acc + parseFloat(t.earned), 0);
      const net = totalEarned - totalSpent;
      const roi = totalSpent > 0 ? ((net / totalSpent) * 100).toFixed(2) : 0;
      summary.innerHTML = `
        <p>Total Spent: $${totalSpent.toFixed(2)}</p>
        <p>Total Earned: $${totalEarned.toFixed(2)}</p>
        <p>Net P&L: <strong class="${net >= 0 ? 'profit' : 'loss'}">$${net.toFixed(2)}</strong></p>
        <p>ROI: ${roi}%</p>
      `;
    }

    function renderTable() {
      table.innerHTML = '';
      trades.forEach((t, i) => {
        const row = table.insertRow();
        row.innerHTML = `
          <td>${t.date}</td>
          <td>$${parseFloat(t.spent).toFixed(2)}</td>
          <td>$${parseFloat(t.earned).toFixed(2)}</td>
          <td class="${(t.earned - t.spent) >= 0 ? 'profit' : 'loss'}">$${(t.earned - t.spent).toFixed(2)}</td>
          <td><button onclick="deleteTrade(${i})">Delete</button></td>
        `;
      });
      updateSummary();
    }

    function deleteTrade(index) {
      trades.splice(index, 1);
      localStorage.setItem('trades', JSON.stringify(trades));
      renderTable();
    }

    form.addEventListener('submit', (e) => {
      e.preventDefault();
      const date = document.getElementById('date').value;
      const spent = parseFloat(document.getElementById('spent').value);
      const earned = parseFloat(document.getElementById('earned').value);
      if (!date || isNaN(spent) || isNaN(earned)) return;
      trades.push({ date, spent, earned });
      localStorage.setItem('trades', JSON.stringify(trades));
      form.reset();
      renderTable();
    });

    renderTable();
  </script>
</body>
</html>
